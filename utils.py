import pybase64 
import time
timestr = time.strftime("%Y%m%d-%H%M%S")
import pathlib
from datetime import datetime
#from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
import streamlit as st


def cloud(text):
    stopwords = set(STOPWORDS)
    stopwords.update(["a","à","â","abord","afin","ah","ai","aie","ainsi","allaient","allo","allô","allons","après","assez",
    "attendu","au","aucun","aucune","aujourd","aujourd'hui","auquel","aura","auront",
    "aussi","autre","autres","aux","auxquelles","auxquels","avaient","avais","avait","avant","avec","avoir","ayant",
    "b",
    "bah",
    "beaucoup",
    "bien",
    "bigre",
    "boum",
    "bravo",
    "brrr",
    "c",
    "ça",
    "car",
    "ce",
    "ceci",
    "cela",
    "celle",
    "celle-ci",
    "celle-là",
    "celles",
    "celles-ci",
    "celles-là",
    "celui",
    "celui-ci",
    "celui-là",
    "cent",
    "cependant",
    "certain",
    "certaine",
    "certaines",
    "certains",
    "certes",
    "ces",
    "cet",
    "cette",
    "ceux",
    "ceux-ci",
    "ceux-là",
    "chacun",
    "chaque",
    "cher",
    "chère",
    "chères",
    "chers",
    "chez",
    "chiche",
    "chut",
    "ci",
    "cinq",
    "cinquantaine",
    "cinquante",
    "cinquantième",
    "cinquième",
    "clac",
    "clic",
    "combien",
    "comme",
    "comment",
    "compris",
    "concernant",
    "contre",
    "couic",
    "crac",
    "d",
    "da",
    "dans",
    "de",
    "debout",
    "dedans",
    "dehors",
    "delà",
    "depuis",
    "derrière",
    "des",
    "dès",
    "désormais",
    "desquelles",
    "desquels",
    "dessous",
    "dessus",
    "deux",
    "deuxième",
    "deuxièmement",
    "devant",
    "devers",
    "devra",
    "différent",
    "différente",
    "différentes",
    "différents",
    "dire",
    "divers",
    "diverse",
    "diverses",
    "dix",
    "dix-huit",
    "dixième",
    "dix-neuf",
    "dix-sept",
    "doit",
    "doivent",
    "donc",
    "dont",
    "douze",
    "douzième",
    "dring",
    "du",
    "duquel",
    "durant",
    "e",
    "effet",
    "eh",
    "elle",
    "elle-même",
    "elles",
    "elles-mêmes",
    "en",
    "encore",
    "entre",
    "envers",
    "environ",
    "es",
    "ès",
    "est",
    "et",
    "etant",
    "étaient",
    "étais",
    "était",
    "étant",
    "etc",
    "été",
    "etre",
    "être",
    "eu",
    "euh",
    "eux",
    "eux-mêmes",
    "excepté",
    "f",
    "façon",
    "fais",
    "faisaient",
    "faisant",
    "fait",
    "feront",
    "fi",
    "flac",
    "floc",
    "font",
    "g",
    "gens",
    "h",
    "ha",
    "hé",
    "hein",
    "hélas",
    "hem",
    "hep",
    "hi",
    "ho",
    "holà",
    "hop",
    "hormis",
    "hors",
    "hou",
    "houp",
    "hue",
    "hui",
    "huit",
    "huitième",
    "hum",
    "hurrah",
    "i",
    "il",
    "ils",
    "importe",
    "j",
    "je",
    "jusqu",
    "jusque",
    "k",
    "l",
    "la",
    "là",
    "laquelle",
    "las",
    "le",
    "lequel",
    "les",
    "lès",
    "lesquelles",
    "lesquels",
    "leur",
    "leurs",
    "longtemps",
    "lorsque",
    "lui",
    "lui-même",
    "m",
    "ma",
    "maint",
    "mais",
    "malgré",
    "me",
    "même",
    "mêmes",
    "merci",
    "mes",
    "mien",
    "mienne",
    "miennes",
    "miens",
    "mille",
    "mince",
    "moi",
    "moi-même",
    "moins",
    "mon",
    "moyennant",
    "n",
    "na",
    "ne",
    "néanmoins",
    "neuf",
    "neuvième",
    "ni",
    "nombreuses",
    "nombreux",
    "non",
    "nos",
    "notre",
    "nôtre",
    "nôtres",
    "nous",
    "nous-mêmes",
    "nul",
    "o",
    "o|",
    "ô",
    "oh",
    "ohé",
    "olé",
    "ollé",
    "on",
    "ont",
    "onze",
    "onzième",
    "ore",
    "ou",
    "où",
    "ouf",
    "ouias",
    "oust",
    "ouste",
    "outre",
    "p",
    "paf",
    "pan",
    "par",
    "parmi",
    "partant",
    "particulier",
    "particulière",
    "particulièrement",
    "pas",
    "passé",
    "pendant",
    "personne",
    "peu",
    "peut",
    "peuvent",
    "peux",
    "pff",
    "pfft",
    "pfut",
    "pif",
    "plein",
    "plouf",
    "plus",
    "plusieurs",
    "plutôt",
    "pouah",
    "pour",
    "pourquoi",
    "premier",
    "première",
    "premièrement",
    "près",
    "proche",
    "psitt",
    "puisque",
    "q",
    "qu",
    "quand",
    "quant",
    "quanta",
    "quant-à-soi",
    "quarante",
    "quatorze",
    "quatre",
    "quatre-vingt",
    "quatrième",
    "quatrièmement",
    "que",
    "quel",
    "quelconque",
    "quelle",
    "quelles",
    "quelque",
    "quelques",
    "quelqu'un",
    "quels",
    "qui",
    "quiconque",
    "quinze",
    "quoi",
    "quoique",
    "r",
    "revoici",
    "revoilà",
    "rien",
    "s",
    "sa",
    "sacrebleu",
    "sans",
    "sapristi",
    "sauf",
    "se",
    "seize",
    "selon",
    "sept",
    "septième",
    "sera",
    "seront",
    "ses",
    "si",
    "sien",
    "sienne",
    "siennes",
    "siens",
    "sinon",
    "six",
    "sixième",
    "soi",
    "soi-même",
    "soit",
    "soixante",
    "son",
    "sont",
    "sous",
    "stop",
    "suis",
    "suivant",
    "sur",
    "surtout",
    "t",
    "ta",
    "tac",
    "tant",
    "te",
    "té",
    "tel",
    "telle",
    "tellement",
    "telles",
    "tels",
    "tenant",
    "tes",
    "tic",
    "tien",
    "tienne",
    "tiennes",
    "tiens",
    "toc",
    "toi",
    "toi-même",
    "ton",
    "touchant",
    "toujours",
    "tous",
    "tout",
    "toute",
    "toutes",
    "treize",
    "trente",
    "très",
    "trois",
    "troisième",
    "troisièmement",
    "trop",
    "tsoin",
    "tsouin",
    "tu",
    "u",
    "un",
    "une",
    "unes",
    "uns",
    "v",
    "va",
    "vais",
    "vas",
    "vé",
    "vers",
    "via",
    "vif",
    "vifs",
    "vingt",
    "vivat",
    "vive",
    "vives",
    "vlan",
    "voici",
    "voilà",
    "vont",
    "vos",
    "votre",
    "vôtre",
    "vôtres",
    "vous",
    "vous-mêmes",
    "vu",
    "w",
    "x",
    "y",
    "z",
    "zut",
    "alors",
    "aucuns",
    "bon",
    "devrait",
    "dos",
    "droite",
    "début",
    "essai",
    "faites",
    "fois",
    "force",
    "haut",
    "ici",
    "juste",
    "maintenant",
    "mine",
    "mot",
    "nommés",
    "nouveaux",
    "parce",
    "parole",
    "personnes",
    "pièce",
    "plupart",
    "seulement",
    "soyez",
    "sujet",
    "tandis",
    "valeur",
    "voie",
    "voient",
    "état",
    "étions","orange","ci","bonjour","bonsoir","c'est","jour","mois",
    "année","vraiment","souvent","jours","côte d'ivoire","semaine","j'ai",
    "application","appli","l'application","l'appli","tre","très","client"])

    wc = WordCloud(background_color="black", colormap="Oranges",stopwords=stopwords,max_font_size=50, max_words=50,random_state=42)

    # generate word cloud
    wc.generate(text)

    # create coloring from image
    #image_colors = ImageColorGenerator(image)

    # show the figure
    plt.figure(figsize=(50,50))
    fig, axes = plt.subplots(2,1)
    axes[0].imshow(wc, interpolation="bilinear")
    # recolor wordcloud and show
    # we could also give color_func=image_colors directly in the constructor
    #axes[1].imshow(image, cmap=plt.cm.gray, interpolation="bilinear")

    for ax in axes:
        ax.set_axis_off()
    st.pyplot(fig)



  



def clean_text(text):
    text = text.lower()
    #text = re.sub(r'[^(a-zA-Z)\s]','', text)
    return text


def clean_text1(text):
    text = re.sub(r'[^(a-zA-Z)\s]','', text)
    return text


def clean_text2(text):
    text = text.lower()
    return text


def count_mobile_coach_line_number(nom,data):
    nom = str(nom)
    return data[data.loc[:,"lower_name"]==nom].nunique()[0]


def liste_unique_number(nom,data):
    nom = str(nom)
    return data[data.loc[:,"lower_name"]==nom].iloc[:,6].unique()

def unique_number(nom, data):
    nom = str(nom)
    return data[data.loc[:,"lower_name"]==nom].nunique()[6]

def double_number(nom, data):
    nom = str(nom)
    return count_mobile_coach_line_number(nom,data)-unique_number(nom, data)

def resume_activite(nom, data):
    return data[data.loc[:,"lower_name"]==nom].nunique()



def temps_conv(df_conv,user_id):
    _user_message = df_conv[df_conv.loc[:,"user_id"]==user_id]
    _date1 = datetime.strptime(str(_user_message.tail(1)["createdAt"])[6:26],' %d-%m-%Y %H:%M:%S')
    _date2 = datetime.strptime(str(_user_message.head(1)["createdAt"])[6:26],' %d-%m-%Y %H:%M:%S')
    _ecart = _date2 - _date1
    return print(_ecart)


def temps_conv1(df_conv,user_id):
    _user_message = df_conv[df_conv.loc[:,"user_id"]==user_id]
    _date1 = datetime.strptime(str(_user_message.tail(1)["createdAt"])[7:25],'%d-%m-%Y %H:%M:%S')
    _date2 = datetime.strptime(str(_user_message.head(1)["createdAt"])[7:25],'%d-%m-%Y %H:%M:%S')
    _ecart = _date2 - _date1
    return print(_ecart)



      
def csv_downloader(data,choix):
    csvfile = data.to_csv(header = False, index = False)
    b64 = pybase64.b64encode(csvfile.encode()).decode()
    new_filename = "{}.txt".format(choix)



    st.markdown("###### Téléchargement du fichier contenant des messages ######")
    href = f'<a href="data:file/txt;base64,{b64}" download="{new_filename}">Cliquer ici !!</a>'
    st.markdown(href,unsafe_allow_html=True)
